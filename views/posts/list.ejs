<% layout('/layouts/boilerplate.ejs') -%>


<div class="container mt-4 d-flex flex-column align-items-center">
  <% for (let post of posts) { %>
    <div class="card mb-4 shadow-sm" style="width: 650px; border-radius: 12px;">
      <div class="card-body">
        <h6 class="text-muted mb-2">@<%= post.author %></h6>
        <!-- Display multiple media files -->
        <% if (post.media && post.media.length > 0) { %>
          <div class="post-media">
            <% if (post.media.length === 1) { %>
              <!-- Single media file -->
              <% if (post.media[0].isVideo) { %>
                <video src="<%= post.media[0].path %>" alt="Post Video" class="img-fluid rounded mb-3" style="max-height: 350px; object-fit: cover;" controls>
                  Your browser does not support the video tag.
                </video>
              <% } else { %>
                <img src="<%= post.media[0].path %>" alt="Post Image" class="img-fluid rounded mb-3" style="max-height: 350px; object-fit: cover;">
              <% } %>
            <% } else { %>
              <!-- Multiple media files - show as grid -->
              <div class="media-grid mb-3" style="max-height: 350px;">
                <% post.media.slice(0, 4).forEach((media, index) => { %>
                  <div class="media-item <%= post.media.length > 4 && index === 3 ? 'more-overlay' : '' %>">
                    <% if (media.isVideo) { %>
                      <video src="<%= media.path %>" style="width: 100%; height: 100%; object-fit: cover;" controls>
                        Your browser does not support the video tag.
                      </video>
                    <% } else { %>
                      <img src="<%= media.path %>" style="width: 100%; height: 100%; object-fit: cover;" alt="Post image">
                    <% } %>
                    <% if (post.media.length > 4 && index === 3) { %>
                      <div class="more-count">+<%= post.media.length - 4 %></div>
                    <% } %>
                  </div>
                <% }) %>
              </div>
            <% } %>
          </div>
        <% } else if (post.image) { %>
          <!-- Fallback to single image for backward compatibility -->
          <img src="<%= post.image %>" alt="Post Image" class="img-fluid rounded mb-3" style="max-height: 350px; object-fit: cover;">
        <% } %>
        <h5 class="card-title fw-bold"><%= post.title %></h5>
        <p class="card-text"><%= post.content %></p>
        <div class="d-flex justify-content-between align-items-center">
          <div class="d-flex align-items-center gap-3">
            <button class="btn btn-link p-0 like-btn <%= post.userLiked ? 'text-danger' : 'text-dark' %>" data-post-id="<%= post._id %>" data-liked="<%= post.userLiked %>">
              <i class="fas fa-heart <%= post.userLiked ? '' : 'fa-regular' %>"></i>
              <span class="ms-1 like-count"><%= post.likes %></span>
            </button>
            <button class="btn btn-link text-dark p-0 share-btn" data-post-id="<%= post._id %>" data-post-title="<%= post.title %>">
              <i class="fas fa-share"></i>
            </button>
          </div>
          <a href="/posts/<%= post._id %>" class="btn btn-sm btn-outline-primary">View</a>
        </div>
      </div>
    </div>
  <% } %>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Like button functionality
  document.querySelectorAll('.like-btn').forEach(button => {
    button.addEventListener('click', async function() {
      const postId = this.dataset.postId;
      const likeCountSpan = this.querySelector('.like-count');
      const heartIcon = this.querySelector('i');
      const isCurrentlyLiked = this.dataset.liked === 'true';
      
      try {
        const response = await fetch(`/posts/${postId}/like`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          }
        });
        
        if (response.ok) {
          const data = await response.json();
          likeCountSpan.textContent = data.likeCount;
          
          // Update button appearance based on like state
          if (data.liked) {
            this.classList.remove('text-dark');
            this.classList.add('text-danger');
            heartIcon.classList.remove('fa-regular');
            heartIcon.classList.add('fa-solid');
            this.dataset.liked = 'true';
          } else {
            this.classList.remove('text-danger');
            this.classList.add('text-dark');
            heartIcon.classList.remove('fa-solid');
            heartIcon.classList.add('fa-regular');
            this.dataset.liked = 'false';
          }
          
          // Add animation effect
          this.style.transform = 'scale(1.2)';
          setTimeout(() => {
            this.style.transform = 'scale(1)';
          }, 200);
        }
      } catch (error) {
        console.error('Error liking post:', error);
      }
    });
  });

  // Share button functionality
  document.querySelectorAll('.share-btn').forEach(button => {
    button.addEventListener('click', function() {
      const postId = this.dataset.postId;
      const postTitle = this.dataset.postTitle;
      const postUrl = `${window.location.origin}/posts/${postId}`;
      
      // Create share modal
      const shareModal = document.createElement('div');
      shareModal.className = 'modal fade';
      shareModal.innerHTML = `
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">Share Post</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
              <p><strong>${postTitle}</strong></p>
              <div class="input-group mb-3">
                <input type="text" class="form-control" value="${postUrl}" id="postUrl" readonly>
                <button class="btn btn-outline-secondary" type="button" id="copyBtn">Copy</button>
              </div>
              <div class="d-flex gap-2 flex-wrap">
                <a href="https://twitter.com/intent/tweet?text=${encodeURIComponent(postTitle)}&url=${encodeURIComponent(postUrl)}" 
                   target="_blank" class="btn btn-primary btn-sm">
                  <i class="fab fa-twitter"></i> Twitter
                </a>
                <a href="https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(postUrl)}" 
                   target="_blank" class="btn btn-primary btn-sm">
                  <i class="fab fa-facebook"></i> Facebook
                </a>
                <a href="https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(postUrl)}" 
                   target="_blank" class="btn btn-primary btn-sm">
                  <i class="fab fa-linkedin"></i> LinkedIn
                </a>
                <a href="https://wa.me/?text=${encodeURIComponent(postTitle + ' ' + postUrl)}" 
                   target="_blank" class="btn btn-success btn-sm">
                  <i class="fab fa-whatsapp"></i> WhatsApp
                </a>
              </div>
            </div>
          </div>
        </div>
      `;
      
      document.body.appendChild(shareModal);
      
      // Initialize Bootstrap modal
      const modal = new bootstrap.Modal(shareModal);
      modal.show();
      
      // Copy to clipboard functionality
      document.getElementById('copyBtn').addEventListener('click', function() {
        const urlInput = document.getElementById('postUrl');
        urlInput.select();
        urlInput.setSelectionRange(0, 99999); // For mobile devices
        
        navigator.clipboard.writeText(urlInput.value).then(function() {
          const copyBtn = document.getElementById('copyBtn');
          const originalText = copyBtn.textContent;
          copyBtn.textContent = 'Copied!';
          copyBtn.className = 'btn btn-success';
          
          setTimeout(() => {
            copyBtn.textContent = originalText;
            copyBtn.className = 'btn btn-outline-secondary';
          }, 2000);
        });
      });
      
      // Clean up modal when closed
      shareModal.addEventListener('hidden.bs.modal', function() {
        document.body.removeChild(shareModal);
      });
    });
  });
});
</script>

