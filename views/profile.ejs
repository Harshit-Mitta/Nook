<% layout('/layouts/boilerplate.ejs') -%>

<style>
.profile-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
}

.profile-header {
  background: white;
  border-radius: 12px;
  padding: 30px;
  margin-bottom: 30px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}

.profile-picture-container {
  position: relative;
  display: inline-block;
  margin-bottom: 20px;
}

.profile-picture {
  width: 150px;
  height: 150px;
  border-radius: 50%;
  object-fit: cover;
  border: 4px solid #fff;
  box-shadow: 0 4px 12px rgba(0,0,0,0.15);
  cursor: pointer;
  transition: transform 0.2s ease;
}

.profile-picture:hover {
  transform: scale(1.05);
}

.edit-icon {
  position: absolute;
  bottom: 5px;
  right: 5px;
  background: #007bff;
  color: white;
  border: none;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  box-shadow: 0 2px 8px rgba(0,0,0,0.2);
  transition: all 0.2s ease;
}

.edit-icon:hover {
  background: #0056b3;
  transform: scale(1.1);
}

.stats-container {
  display: flex;
  justify-content: space-around;
  margin: 20px 0;
  padding: 20px 0;
  border-top: 1px solid #eee;
  border-bottom: 1px solid #eee;
}

.stat-item {
  text-align: center;
  cursor: pointer;
  transition: color 0.2s ease;
}

.stat-item:hover {
  color: #007bff;
}

.stat-number {
  font-size: 24px;
  font-weight: bold;
  color: #333;
}

.stat-label {
  font-size: 14px;
  color: #666;
  margin-top: 5px;
}

.posts-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 20px;
  margin-top: 20px;
}

.post-card {
  background: white;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  cursor: pointer;
}

.post-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 25px rgba(0,0,0,0.15);
}

.post-media {
  width: 100%;
  height: 200px;
  object-fit: cover;
}

.post-content {
  padding: 15px;
}

.post-title {
  font-weight: bold;
  margin-bottom: 8px;
  color: #333;
}

.post-text {
  color: #666;
  font-size: 14px;
  margin-bottom: 10px;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.post-meta {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 12px;
  color: #999;
}

.post-actions {
  display: flex;
  gap: 15px;
  align-items: center;
}

.default-avatar {
  width: 150px;
  height: 150px;
  border-radius: 50%;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-size: 60px;
  font-weight: bold;
  border: 4px solid #fff;
  box-shadow: 0 4px 12px rgba(0,0,0,0.15);
}

.hidden-file-input {
  display: none;
}

.profile-info {
  text-align: center;
}

.username {
  font-size: 28px;
  font-weight: bold;
  margin-bottom: 10px;
  color: #333;
}

.bio {
  color: #666;
  font-size: 16px;
  margin-bottom: 20px;
}

.no-posts {
  text-align: center;
  padding: 60px 20px;
  color: #999;
}

.no-posts i {
  font-size: 48px;
  margin-bottom: 20px;
  color: #ddd;
}
</style>

<div class="profile-container">
  <!-- Profile Header -->
  <div class="profile-header">
    <div class="row align-items-center">
      <div class="col-md-3 text-center">
        <div class="profile-picture-container">
          <% if (user.profilePicture && user.profilePicture.path) { %>
            <img src="<%= user.profilePicture.path %>" alt="Profile Picture" class="profile-picture" id="profilePicture">
          <% } else { %>
            <div class="default-avatar" id="profilePicture">
              <%= user.username.charAt(0).toUpperCase() %>
            </div>
          <% } %>
          <button class="edit-icon" onclick="document.getElementById('profilePictureInput').click()">
            <i class="fas fa-camera"></i>
          </button>
          <input type="file" id="profilePictureInput" class="hidden-file-input" accept="image/*">
        </div>
      </div>
      
      <div class="col-md-9">
        <div class="profile-info">
          <h1 class="username"><%= user.username %></h1>
           <p id="bio-text"><%= user.bio || "No bio added yet." %></p>

  <!-- Hidden form -->
  <form
    id="edit-bio-form"
    action="/update-bio"
    method="POST"
    style="display: none;"
  >
    <textarea
      name="bio"
      id="bio-input"
      class="form-control"
      rows="3"
    ><%= user.bio %></textarea>
    <button type="submit" class="btn btn-success mt-2">Save</button>
    <button type="button" class="btn btn-secondary mt-2" id="cancel-edit">
      Cancel
    </button>
  </form>

  <button id="edit-bio-btn" class="btn btn-primary mt-2">Edit Bio</button>

          
          <!-- Stats -->
          <div class="stats-container">
            <div class="stat-item" onclick="viewPosts()">
              <div class="stat-number" id="postsCount"><%= posts.length %></div>
              <div class="stat-label">Posts</div>
            </div>
            <div class="stat-item" onclick="viewFollowers()">
              <div class="stat-number" id="followersCount"><%= user.followers ? user.followers.length : 0 %></div>
              <div class="stat-label">Followers</div>
            </div>
            <div class="stat-item" onclick="viewFollowing()">
              <div class="stat-number" id="followingCount"><%= user.following ? user.following.length : 0 %></div>
              <div class="stat-label">Following</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Posts Section -->
  <div class="posts-section">
    <h3 class="mb-4">Recent Posts</h3>
    
    <% if (posts && posts.length > 0) { %>
      <div class="posts-grid">
        <% posts.forEach(post => { %>
          <div class="post-card" onclick="viewPost('<%= post._id %>')">
            <!-- Post Media -->
            <% if (post.media && post.media.length > 0) { %>
              <% if (post.media[0].isVideo) { %>
                <video class="post-media" muted>
                  <source src="<%= post.media[0].path %>" type="<%= post.media[0].mimetype %>">
                </video>
              <% } else { %>
                <img src="<%= post.media[0].path %>" alt="Post Image" class="post-media">
              <% } %>
            <% } else if (post.image && post.image.trim() !== '') { %>
              <img src="<%= post.image %>" alt="Post Image" class="post-media">
            <% } else { %>
              <div class="post-media" style="background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%); display: flex; align-items: center; justify-content: center;">
                <i class="fas fa-image" style="font-size: 48px; color: #ccc;"></i>
              </div>
            <% } %>
            
            <!-- Post Content -->
            <div class="post-content">
              <div class="post-title"><%= post.title %></div>
              <div class="post-text"><%= post.content %></div>
              <div class="post-meta">
                <span><%= post.createdAt.toLocaleDateString() %></span>
                <div class="post-actions">
                  <span><i class="fas fa-heart"></i> <%= post.likes %></span>
                  <span><i class="fas fa-comment"></i> <%= post.comments ? post.comments.length : 0 %></span>
                </div>
              </div>
            </div>
          </div>
        <% }) %>
      </div>
    <% } else { %>
      <div class="no-posts">
        <i class="fas fa-camera"></i>
        <h4>No posts yet</h4>
        <p>Share your first post to get started!</p>
        <a href="/posts/new" class="btn btn-primary">Create Post</a>
      </div>
    <% } %>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Profile picture upload functionality
  const profilePictureInput = document.getElementById('profilePictureInput');
  const profilePicture = document.getElementById('profilePicture');

  profilePictureInput.addEventListener('change', function(e) {
    const file = e.target.files[0];
    if (!file) return;

    // Validate file type
    if (!file.type.startsWith('image/')) {
      alert('Please select an image file.');
      return;
    }

    // Validate file size (max 5MB)
    if (file.size > 5 * 1024 * 1024) {
      alert('File size must be less than 5MB.');
      return;
    }

    // Upload profile picture
    const formData = new FormData();
    formData.append('profilePicture', file);

    fetch('/profile/picture', {
      method: 'POST',
      body: formData
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        // Update profile picture display
        if (data.profilePicture) {
          profilePicture.src = data.profilePicture;
          profilePicture.style.display = 'block';
          // Hide default avatar if it exists
          if (profilePicture.classList.contains('default-avatar')) {
            profilePicture.classList.remove('default-avatar');
            profilePicture.style.background = 'none';
            profilePicture.innerHTML = '';
          }
        } else {
          // Show default avatar
          location.reload(); // Simple way to refresh the page
        }
      } else {
        alert('Error updating profile picture.');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('Error updating profile picture.');
    });
  });

  // Add click to remove functionality (double click)
  let clickCount = 0;
  profilePicture.addEventListener('click', function() {
    clickCount++;
    setTimeout(() => {
      if (clickCount === 2) {
        // Double click to remove profile picture
        if (confirm('Remove profile picture?')) {
          fetch('/profile/picture', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({})
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              location.reload();
            }
          });
        }
      }
      clickCount = 0;
    }, 300);
  });
});

// Bio editing functionality
  const editBtn = document.getElementById("edit-bio-btn");
  const bioText = document.getElementById("bio-text");
  const editForm = document.getElementById("edit-bio-form");
  const cancelBtn = document.getElementById("cancel-edit");

  editBtn.addEventListener("click", () => {
    bioText.style.display = "none";
    editForm.style.display = "block";
    editBtn.style.display = "none";
  });

  cancelBtn.addEventListener("click", () => {
    editForm.style.display = "none";
    bioText.style.display = "block";
    editBtn.style.display = "block";
  });

    // Scroll to posts section
function viewPosts() {

  document.querySelector('.posts-section').scrollIntoView({ behavior: 'smooth' });
}
  // TODO: Implement followers modal/page
function viewFollowers() {

  alert('Followers list coming soon!');
}


  // TODO: Implement following modal/page
function viewFollowing() {

  alert('Following list coming soon!');
}

function viewPost(postId) {
  window.location.href = `/posts/${postId}`;
}
</script>


